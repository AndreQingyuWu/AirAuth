# Generated by Django 2.1.2 on 2018-10-22 12:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cellphone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group_Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='x', max_length=40, verbose_name='权限操作名')),
                ('codename', models.CharField(default='x', max_length=40, verbose_name='操作名')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=40, verbose_name='主机ID')),
                ('host_ip', models.GenericIPAddressField(default='0.0.0.0', verbose_name='IP地址')),
                ('active_time', models.IntegerField(default='x', verbose_name='激活时间')),
            ],
        ),
        migrations.CreateModel(
            name='Host_Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='组名')),
            ],
        ),
        migrations.CreateModel(
            name='Accesstoken',
            fields=[
                ('host', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='oauthServer.Host')),
                ('is_alive', models.IntegerField(default=1, verbose_name='是否生存')),
                ('access_token', models.CharField(default='x', max_length=40, verbose_name='授权码')),
                ('exptime', models.IntegerField(default='x', verbose_name='过期时间')),
            ],
        ),
        migrations.CreateModel(
            name='Authcode_log',
            fields=[
                ('host', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='oauthServer.Host')),
                ('response_type', models.CharField(max_length=40, verbose_name='')),
                ('redirect_uri', models.CharField(max_length=40, verbose_name='')),
                ('scope', models.CharField(max_length=40, verbose_name='')),
                ('state', models.CharField(default='x', max_length=40, verbose_name='')),
                ('auth_code', models.CharField(default='x', max_length=40, verbose_name='授权码')),
                ('exptime', models.IntegerField(default='x', verbose_name='过期时间')),
            ],
        ),
        migrations.CreateModel(
            name='Host_Group_Permissions',
            fields=[
                ('host_group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='oauthServer.Host_Group')),
                ('group_permissions', models.ManyToManyField(to='oauthServer.Group_Permission')),
            ],
        ),
        migrations.CreateModel(
            name='Refreshtoken',
            fields=[
                ('host', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='oauthServer.Host')),
                ('is_alive', models.IntegerField(default=1, verbose_name='是否生存')),
                ('refresh_token', models.CharField(default='x', max_length=40, verbose_name='刷新码')),
                ('exptime', models.IntegerField(default='x', verbose_name='过期时间')),
            ],
        ),
        migrations.AddField(
            model_name='host',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='授权人'),
        ),
    ]
